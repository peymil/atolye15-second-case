Inputs
Inputs must received via http request.

- A git repository.
  Local or remote

- Email
  Program must be able to accept more emails while running.

---

Program Functions

- Parsing any "package management" file.
  package.json, composer.json

- Fetching targeted file from a git repo.
  Planinng to use "simple-git". A nodejs git implementation.
  simple-git using filesystem (maybe files can be cloned to /tmp). Will try to find another package or maybe i will just use github's api ಥ_ಥ

- Scheduling repetitive events.
  Cronjob seems like the best way for repetetive events.
  Planning to use "cron" package.
  It must remember events after restart so i'm planning to write them in a plain text file.(not a priority)

- Communicating with package manager's api.
  npm(nodejs),packagist(php)

- Sending email.
  Planning to use "node-mailer" package

- Hosting a http server.
  It must listen incoming POST requests to /dependencybot/subscribe
  Must parse json body and body must include:
  {
  git_repo:String (path or http)
  emails:String[]
  }
  Body must be validated. If body is not valid send 422
  Planning to use Express.js because of it's scalability(canceling ) and I don't want to tussle with node http module.

---

Program Outputs

- Outdated packages according to remote package management api.

Caching updated package with last commit SHA can save a lot of time and resource.There is no need to do anything other than returning the previous value if previous SHA and current SHA is the same.

Caching git server api could save some resource.
